name: Test Azure Deployment

permissions:
  contents: read
  pages: write
  id-token: write

on:
  workflow_dispatch:

jobs:
  deploy-offer-service:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_AKS_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_AKS_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_AKS_SUBSCRIPTION_ID }}
    
      - name: Update demo environment
        env: 
          AZURE_AKS_SUBSCRIPTION_ID: ${{ secrets.AZURE_AKS_SUBSCRIPTION_ID }}
          AZURE_AKS_TENANT_ID: ${{ secrets.AZURE_AKS_TENANT_ID }}
        run: |
           sed -i 's|<your_subscription_id>|'"$AZURE_AKS_SUBSCRIPTION_ID"'|g' ./deployment-scripts/azure/offer-service/environment/demo/terraform/offer.tf
           sed -i 's|<your_tenant_id>|'"$AZURE_AKS_TENANT_ID"'|g' ./deployment-scripts/azure/offer-service/environment/demo/terraform/offer.tf

      - name: Terraform init
        run: |
          cd ./deployment-scripts/azure/offer-service/environment/demo/terraform
          terraform init

      - name: Terraform apply
        env: 
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_AKS_SUBSCRIPTION_ID }}
          KUBE_CONFIG_PATH: ~/.kube/config
        run: |
          mkdir -p $KUBE_CONFIG_PATH
          cd ./deployment-scripts/azure/offer-service/environment/demo/terraform
          terraform apply -auto-approve

      - name: Cleanup on failure
        if: failure()
        run: |
          cd ./deployment-scripts/azure/offer-service/environment/demo/terraform
          terraform destroy -auto-approve
